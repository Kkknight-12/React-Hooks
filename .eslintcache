[{"/Users/knight/FrontEnd_Projects/React/hooks/src/index.js":"1","/Users/knight/FrontEnd_Projects/React/hooks/src/App.js":"2","/Users/knight/FrontEnd_Projects/React/hooks/src/components/Accordion.js":"3","/Users/knight/FrontEnd_Projects/React/hooks/src/components/Search.js":"4","/Users/knight/FrontEnd_Projects/React/hooks/src/components/Dropdown.js":"5","/Users/knight/FrontEnd_Projects/React/hooks/src/components/Translate.js":"6","/Users/knight/FrontEnd_Projects/React/hooks/src/components/Convert.js":"7","/Users/knight/FrontEnd_Projects/React/hooks/src/components/Header.js":"8"},{"size":219,"mtime":1612112821103,"results":"9","hashOfConfig":"10"},{"size":2171,"mtime":1612367939927,"results":"11","hashOfConfig":"10"},{"size":1353,"mtime":1615919193672,"results":"12","hashOfConfig":"10"},{"size":3402,"mtime":1615964394638,"results":"13","hashOfConfig":"10"},{"size":2575,"mtime":1612367191727,"results":"14","hashOfConfig":"10"},{"size":1128,"mtime":1612297058915,"results":"15","hashOfConfig":"10"},{"size":1337,"mtime":1612328392619,"results":"16","hashOfConfig":"10"},{"size":553,"mtime":1612369011208,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1c0md52",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/knight/FrontEnd_Projects/React/hooks/src/index.js",[],["37","38"],"/Users/knight/FrontEnd_Projects/React/hooks/src/App.js",["39","40","41","42"],"import { useState } from 'react';\nimport Header from './components/Header'\nimport Accordion from './components/Accordion'\nimport Search from './components/Search'\nimport Dropdown from './components/Dropdown'\nimport Translate from './components/Translate'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst items = [\n    {\n        title: 'What is React ?',\n        content: 'React is a front end javascript framework'\n    },\n    {\n        title: 'Why use React ?',\n        content: 'React is a favorite JS library among enginners'\n    },\n    {\n        title: 'How do you use React?',\n        content: 'You use React by creating components'\n    }\n]\n\nconst options = [\n  {\n    label: 'The Color Red',\n    value: 'red'\n  },\n  {\n    label: 'The Color Green',\n    value: 'green'\n  },\n  {\n    label: 'A Shade of Blue',\n    value: 'blue'\n  }\n]\n\nconst showAccordion = () => {\n  if(window.location.pathname ==='/') {\n    return <Accordion items={items}/>\n  }\n}\n\nconst showDropdown= () => {\n  if(window.location.pathname ==='/dropdown') {\n    return <Dropdown />\n  }\n}\nconst showList = () => {\n  if(window.location.pathname ==='/list') {\n    return <Search />\n  }\n}\n\nconst showTranslate = () => {\n  if(window.location.pathname ==='/translate') {\n    return <Translate />\n  }\n}\n\nfunction App() {\n  const [ selected, setSelected ] = useState(options[0]);\n  return (\n    <div>\n    <Router>\n      <Header/>\n      <Switch>\n        <Route exact path=\"/\">\n          <Accordion items={items}/>\n        </Route>\n        <Route exact path=\"/search\">\n          <Search/>\n        </Route>\n        <Route exact path=\"/translate\">\n          <Translate/>\n        </Route>\n        <Route exact path=\"/dropdown\">\n          <Dropdown \n          label=\"Select A Color\"\n          selected={selected} \n          onSelectedChange={setSelected}\n          options={options}/>\n            <div>\n              <h3 \n              id='select-color'\n              style= {{color:`${selected.value}`}}>\n                  {`This color is ${selected.value}`}\n              </h3>\n            </div>\n        </Route>\n      </Switch>\n    </Router>\n    </div>\n  )\n}\n\nexport default App;\n","/Users/knight/FrontEnd_Projects/React/hooks/src/components/Accordion.js",[],"/Users/knight/FrontEnd_Projects/React/hooks/src/components/Search.js",[],"/Users/knight/FrontEnd_Projects/React/hooks/src/components/Dropdown.js",[],"/Users/knight/FrontEnd_Projects/React/hooks/src/components/Translate.js",[],"/Users/knight/FrontEnd_Projects/React/hooks/src/components/Convert.js",["43"],"import {useState, useEffect, useDebugValue } from 'react';\nimport axios from 'axios';\n\nconst Convert = ( { language, text } ) => {\n    const [ translated, setTranslated ] = useState('');\n    const [ debouncedText, setDebouncedText ] = useState(text);\n    \n    useEffect( () => {\n        const timerId = setTimeout( () => {\n            setDebouncedText(text);\n        }, 500);\n\n        return () => {\n            clearTimeout(timerId);\n        };\n    }, [text])\n\n    useEffect( () => {\n        const doTranslation = async () => {\n            const { data } = await axios.post(\n                'https://translation.googleapis.com/language/translate/v2',\n                {},\n                {\n                    params:{\n                        q: debouncedText,\n                        target: language.value,\n                        key: 'AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM'\n                    }\n                }\n            ); \n            setTranslated(data.data.translations[0].translatedText);\n        };\n        // now doTranslation will be invoked when we first run or compoenent\n        // then whenever language or text change\n        doTranslation();\n    }, [ language, debouncedText ]);\n\n    return ( \n        <div>\n            <h1 className=\"ui header\">{translated}</h1>\n        </div>\n    );\n}\n\nexport default Convert;","/Users/knight/FrontEnd_Projects/React/hooks/src/components/Header.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":39,"column":7,"nodeType":"50","messageId":"51","endLine":39,"endColumn":20},{"ruleId":"48","severity":1,"message":"52","line":45,"column":7,"nodeType":"50","messageId":"51","endLine":45,"endColumn":19},{"ruleId":"48","severity":1,"message":"53","line":50,"column":7,"nodeType":"50","messageId":"51","endLine":50,"endColumn":15},{"ruleId":"48","severity":1,"message":"54","line":56,"column":7,"nodeType":"50","messageId":"51","endLine":56,"endColumn":20},{"ruleId":"48","severity":1,"message":"55","line":1,"column":30,"nodeType":"50","messageId":"51","endLine":1,"endColumn":43},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'showAccordion' is assigned a value but never used.","Identifier","unusedVar","'showDropdown' is assigned a value but never used.","'showList' is assigned a value but never used.","'showTranslate' is assigned a value but never used.","'useDebugValue' is defined but never used.","no-global-assign","no-unsafe-negation"]